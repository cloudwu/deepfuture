english:
  app.title : "Deep Future"
  button.advancement.skip : "Skip(${n|0})"
  button.new_world : "Create"
  button.action.plan : "Plan"
  button.action.skip : "Skip(${n})"
  button.restart : "Play Again"
  button.battle.confirm : "Battle"
  button.expand.confirm : "Expand(${n|0})"
  button.setting : "[gear]"
  button.menu.returngame : "Return"
  button.menu.restart : "Restart"
  button.menu.startmenu : "Quit"
  button.menu.restart_confirm : "[red]CONFIRM[n]"
  button.menu.erasegame : "Erase"
  button.menu.erasegame_confirm : "[red]CONFIRM[n]"
  button.menu.language : "${name}"
  button.menu.lang_select : "${name}"
  button.menu.exit : "Exit"
  button.menu.start : "Start"
  button.menu.newgame : "New Campaign"
  button.menu.continue : "$(hud.turn)\n[808080]${time}[n]"
  button.menu.manual : "Manual"
  button.menu.credits : "Credits"
  tips.menu.language : "[lbutton]Switch language\n - Current language is ${english_name}"
  tips.menu.lang_select : "[lbutton]Switch to ${english_name}"
  tips.menu.returngame : "[lbutton]Exit menu"
  tips.menu.restart : "[lbutton]Abandon current game\n - Start a new game with current deck"
  tips.menu.startmenu : "[lbutton]Return to start menu\n - Save current progress"
  tips.menu.restart_confirm : "[lbutton]Confirm to abandon current game"
  tips.menu.erasegame : "[lbutton]Erase current game\n - You can restart a new compaign from start"
  tips.menu.erasegame_confirm : "[lbutton]Confirm to erase current game"
  tips.menu.exit : "[lbutton]Exit Game"
  tips.menu.start : "[lbutton]Start Game"
  tips.menu.newgame : "[lbutton]New Campaign"
  tips.menu.manual : "[lbutton] Open game manual by default browser"
  tips.menu.credits : "[lbutton] Show Credits"
  tips.setup.homeworld : "[lbutton]Select [blue]${world}[n] as homeworld"
  tips.setup.invalid : "Please select $(card.type.world), this is ${type}"
  tips.setup.newworld : "[lbutton]Create a new [blue]$(card.type.world)[n] as homeworld\n - Because there's no $(card.type.world) in hand"
  tips.setup.newworld.invalid : "This is a ${type}, cannot be used as homeworld\n - Please create a new $(card.type.world)"
  tips.evoke.action.choose : "[lbutton]Choose action [blue]${action}[n]\n - ${desc}\n"
  tips.evoke.action.unique : "Cannot perform [blue]${action}[n]行动\n - ${action} action has already been performed in the action phase"
  tips.evoke.action.invalid : "Cannot perform [blue]${action}[n] action\n - ${desc}"
  tips.action.choose : "[lbutton]Choose action [blue]${action}[n]\n - ${desc}\n$(tips.explain)"
  tips.action.unique : "$(tips.evoke.action.unique)\n - Can choose other action cards\n - Can execute $(button.action.plan)\n$(tips.explain)"
  tips.action.invalid : "$(tips.evoke.action.invalid)\n$(tips.explain)"
  tips.action.homeworld : "$(tips.explain)"
  tips.action.neutral : "$(tips.explain)"
  tips.action.colony : "$(tips.explain)"
  tips.action.finish : " - End $(phase.action) phase\n - Enter $(phase.payment) phase"
  tips.action.map : "Galaxy map\n - Black [people] represents enemies\n - [blue]Blue[people][n] represents your population"
  tips.action.map.desc : "$(tips.grow.desc)"
  tips.action.track : "Game progress tracks\n - $(hud.C.logo)Culture $(hud.M.logo)Might $(hud.S.logo)Stability $(hud.X.logo)Xenology\n - Should avoid [coin] falling to [cross]\n - Try to advance [coin] to [star]"
  tips.action.button_setting : "[lbutton]Game menu"
  tips.action.evoke : " - $(action.evoke) this $(card.type.civ)\n"
  tips.button.plan : "[lbutton]Create and keep a $(card.type.blank)\n - Specify the type of $(card.type.blank)\n - Discard all other hand cards\n$(tips.action.finish)"
  tips.button.actionskip : "[lbutton]Skip ${n} actions\n$(tips.action.finish)"
  tips.explain : "[rbutton]Explain this card"
  tips.desc.return : "[lbutton][rbutton]Return"
  tips.discard.focus : "[lbutton]Discard this card\n - This is a randomly drawn card from hand"
  tips.discard.invalid : "Already exceeded hand limit ${limit}, must randomly discard excess cards"
  tips.discard.advancement: "[lbutton]Discard this card"
  tips.discard.advancement.invalid: "Please select another hand card\n - This card has been used and will be discarded"
  tips.advancement.start : "$(START) phase"
  tips.advancement.power : "$(POWER) action"
  tips.advancement.settle : "$(SETTLE) action"
  tips.advancement.grow : "$(GROW) action"
  tips.advancement.advance : "$(ADVANCE) action"
  tips.advancement.battle : "$(BATTLE) action"
  tips.advancement.expand : "$(EXPAND) action"
  tips.advancement.skip : "[lbutton]End ${phase}\n - Skip potential ${n} effects"
  tips.advancement.card.unique : "[lbutton]${effect}\n - Effect from [blue]${adv}[n]\n$(tips.explain)"
  tips.advancement.card.multiple : "[lbutton]${effect}\n - Effect from [blue]${adv}[n]\n[rbutton]Switch to ${nextadv}"
  tips.advance.newcard : "[lbutton]Draw an incomplete $(card.type.tech)\n - Or create a new $(card.type.tech)\n - Advance and place in $(desc.place.homeworld)"
  tips.advance.card : "[lbutton]Advance this card"
  tips.advance.invalid : "Select a card to advance\n - $(desc.place.homeworld)\n - $(desc.place.colony)\n - Draw pile"
  tips.advance.canredraw : "\n - Can use [blue]$(adv.chemistry.name)[n] to redraw"
  tips.advance.randsuit : "[lbutton]Confirm newly generated type ${suit}$(tips.advance.canredraw)"
  tips.advance.chemistry : "[lbutton]Redraw advancement type\n - Currently randomly drawn type is ${suit}"
  tips.advance.redraw : "Please confirm drawn type ${suit}$(tips.advance.canredraw)"
  tips.advance.randvalue : "[lbutton]New advancement: [blue]${name}[n]\n - ${desc}$(tips.advance.canredraw)"
  tips.advance.chemistry.value : "[lbutton]Redraw advancement, possible choices:\n${adv}"
  tips.advance.random : "[lbutton]Draw ${suit} type advancement:\n${adv}"
  tips.advance.choose : "[lbutton]Freely choose ${suit} type advancement"
  tips.advance.choose.invalid : "Select an advancement type and confirm its method\n - $(adv.random.value): Draw a card, based on number\n - $(adv.choose.value)"
  tips.advance.redraw.value : "Please confirm new advancement: ${name}\n - ${desc}$(tips.advance.canredraw)"
  tips.advance.physics.nouse : "[lbutton]Draw card to determine advancement\n - Give up using $(adv.physics.name)"
  tips.advance.physics.use : "[lbutton]Freely choose advancement\n - Still need to use $(adv.physics.name) ${n} more times"
  tips.advance.physics.need : "$(adv.physics.name): Freely choose advancement\n - Still need ${n} effects"
  tips.advance.physics.confirm : "[lbutton]Choose advancement: ${name}\n - ${desc}"
  tips.advance.physics.invalid : "Please choose one from the 6 ${suit} type advancements"
  tips.grow.limit : "\n - Sector population [people] limit is ${limit}"
  tips.grow.advice : "Please select a sector you control\n - Add [blue][people][n]$(tips.grow.limit)"
  tips.grow.desc : "${what}\n - ${desc}"
  tips.grow.execute : "[lbutton]Add [blue][people][n] to this sector$(tips.grow.limit)"
  tips.evoke.population.advice : "Choose a [sector] you control\n - Add [blue][people]x${n}[n]$(tips.grow.limit)"
  tips.evoke.population : "[lbutton]Add [blue][people]x${n}[n] to this sector[sector]$(tips.grow.limit)"
  tips.evoke.territory : "[lbutton]Add [blue][people][n] to this sector[sector]"
  tips.evoke.territory.advice : "Choose empty adjacent sector[sector] to add [blue][people][n]"
  tips.evoke.R.title : "Choose [sector] you control"
  tips.evoke.R : "$(tips.grow.execute)"
  tips.evoke.R.advice : "Choose any [sector] you control to add [blue][people][n]"
  tips.evoke.F.departure : "[lbutton]Choose this [sector] to expand"
  tips.evoke.F.departure.advice : "Choose a sector [sector] have least 3 [blue][people][n] to expand"
  tips.evoke.F.expand : "[lbutton]Expand to sector[sector] ${sector} with [blue][blackman][n]\n[rbutton]Move [blue][blackman][n] back from sector[sector] ${sector}"
  tips.evoke.F.expand.invalid : "[rbutton]Move back [blue][blackman][n] from sector[sector] ${sector}\nCannot expand to sector[sector] ${sector}\n - ${reason}"
  tips.evoke.F.invalid.nopeople : "Not enough people[blue][people][n]"
  tips.evoke.F.invalid.limit : "The sector[sector] ${sector} is full"
  tips.evoke.F.invalid.exceed : "Already expand to two sector[sector]"
  tips.evoke.F.invalid.reserve : "Need expand to one more sector[sector]"
  tips.evoke.F.advice : "Choose two adjacent sectors[sector] to expand"
  tips.evoke.F.confirm : "[lbutton]Begin expand"
  tips.evoke.F.confirm.invalid : "Expand to two sectors[sector]\n - Already choose ${n} [sector]"
  tips.evoke.F.from : "The sector[sector] ${sector} is the departure\n - Plan to move ${people} [blue][blackman][n]"
  tips.evoke.H.rival : "[lbutton]Remove 1 rival [people] from the sector[sector] ${sector}"
  tips.evoke.M.new : "[lbutton]Create a new $(card.type.world)\n - Colonize to the sector you control"
  tips.evoke.M.exist : "[lbutton]Convert this $(card.type.blank) to $(card.type.world)\n - Draw a card[card]\n - Colonize to the sector you control"
  tips.evoke.M.advice : "Choose a $(card.type.blank) in your hand\nOr click the deck to create a new $(card.type.world)"
  tips.evoke.K.new : "[lbutton]Draw a card[card]\n - If draw a uncomplete $(card.type.tech)\n   pick 1 value\n - Create a new $(card.type.tech)\n   pick either 1 suit or value"
  tips.evoke.K.exist : "[lbutton]Advance this $(card.type.tech)\n - Pick a value"
  tips.evoke.K.advice : " - Draw a $(card.type.tech)\n - Advance $(card.type.tech) of $(desc.place.homeworld)"
  tips.evoke.K.picksuit : "[lbutton]Pick ${suit} for this $(card.type.tech)"
  tips.evoke.K.picksuit.random : "[lbutton]Draw a card to dicide the value of advancement"
  tips.evoke.K.picksuit.advice : "Pick value for this $(card.type.tech)\n - Or draw a card to decide the suit\n - And then pick the value"
  tips.settle.capture : "[lbutton]Capture ${world.name} in sector ${world.sector}\n - Move to $(desc.place.colony)\n - [blue]$(action.power)[n] action\n - [blue]$(action.advance)[n] action"
  tips.settle.hand : "[lbutton]Colonize this $(card.type.world)\n - Place in $(desc.place.colony)\n - Draw 1 [card]"
  tips.settle.blank : "[lbutton]Colonize in a sector you control\n - This $(card.type.blank) becomes $(card.type.world)\n - Choose sector from your territory\n - Place in $(desc.place.colony)\n - Draw 1 [card]"
  tips.settle.newworld : "[lbutton]Colonize in a sector you control\n - Create a new $(card.type.world)\n - Choose sector from your territory\n - Place in $(desc.place.colony)"
  tips.settle.society : "[lbutton]Enable new $(card.type.world) colonization option\n - Click draw pile to create $(card.type.world)"
  tips.settle.advice : "Select planet card to colonize"
  tips.settle.confirm : "[lbutton]Choose a sector in your territory to colonize\n - This $(card.type.blank) will convert to $(card.type.world)"
  tips.settle.confirm.advice : "Confirm $(card.type.blank) used for colonization"
  tips.settle.map.confirm : "[lbutton]Colonize sector ${sec}\n - $(card.type.blank) will convert to $(card.type.world)\n - $(card.type.world) will be set to sector ${sec}"
  tips.settle.map.desc : "$(tips.grow.desc)"
  tips.settle.map.advice : "Please select a sector you control\n - $(card.type.blank) will convert to $(card.type.world)"
  tips.battle.set : "[lbutton]Add sector ${sec} to battlefield\n - ${desc}"
  tips.battle.set.invalid : "This sector cannot be a battlefield\n - Need a sector you control\n - Need adjacent rival sectors"
  tips.battle.set.advice : "Please select battlefield on the star map"
  tips.battle.buildup : "[lbutton]Add one unit [blue][people][n] to battlefield"
  tips.battle.effect : " - Both sides eliminate [blackman] at 1:1 ratio"
  tips.battle.prepare : "$(tips.battle.buildup)\n[rbutton]Withdraw one unit [blue][people][n] from battlefield\n$(tips.battle.effect)"
  tips.battle.prepare.invalid : "$(tips.battle.retreat)\n$(tips.battle.effect)\n - [800000]Cannot lose all colonies[n]"
  tips.battle.prepare.lost : "$(tips.battle.buildup)\n[800000] - Will lose colony[n]\n$(tips.battle.retreat)\n$(tips.battle.effect)"
  tips.battle.retreat : "[rbutton]Withdraw one unit [blue][people][n] from battlefield"
  tips.battle.battlefield : "[blue]Select battlefield[n]"
  tips.battle.confirm : "[lbutton]Resolve all battlefield casualties"
  tips.battle.lostall : "[800000]Cannot lose all colonies[n]\n - Withdraw units from battlefield to preserve colonies"
  tips.battle.safe.valid :"[lbutton]Advance ${type} track one space\n - Advancing tracks is the game's objective"
  tips.battle.safe.invalid : "${type} track can no longer advance"
  tips.battle.safe.out : "Please select a track to advance one space"
  tips.expand.choose.valid : "[lbutton]Set sector ${sec} as $(EXPAND) departure point"
  tips.expand.choose.invalid : "Cannot set sector ${sec} as $(EXPAND) departure point\n - ${reason}"
  tips.expand.invalid.lost : "Only one [blue][people][n] population"
  tips.expand.invalid.block : "All sectors within range cannot be entered"
  tips.expand.invalid.noctrl : "Not a sector you control"
  tips.expand.valid : "[lbutton]Move [blue][people][n] from sector ${from} to sector ${sec}\n${undo|}"
  tips.expand.invalid : "Cannot move from sector ${from} to here\n - ${reason}\n${undo|}"
  tips.expand.invalid.lastpeople : "Lose control of sector ${from}"
  tips.expand.invalid.dest : "Sector ${sec} unreachable"
  tips.expand.invalid.full : "Sector ${sec} has reached population limit"
  tips.expand.invalid.already : "Cannot set sector ${sec} as second destination"
  tips.expand.invalid.spacecraft : "Need more [blue]$(adv.spacecraft.name)[n]"
  tips.expand.invalid.departure : "It is your expand depature sector"
  tips.expand.undo : "[rbutton]Withdraw [blue][people][n] back to sector ${from}"
  tips.expand.confirm : "[lbutton]Confirm moving [blue][people][n]x${n} from sector ${from}"
  tips.expand.confirm.invalid : "Select a sector, move at least one [blue][people][n]"
  tips.evoke.enable : "[lbutton]$(action.evoke)\n - ${advancement}\n - ${victory}"
  tips.evoke.disable : "Control the sector[sector] ${sector} first to $(action.evoke)"
  NAMED_SECTOR : "A civilization named it : ${name}"
  WONDER_SECTOR : "\n - There is a wonder : ${wonder}\n - ${effect}"
  BLACKHOLE : "Black Hole"
  SECTOR : "Sector ${sec}"
  EMPTY_SECTOR : "Empty Sector"
  FRIEND_SECTOR : "Sector you control [blue][people][n]x${people}"
  HOSTILE_SECTOR : "Hostile sector [people]x${people}"
  tips.look.focus : "[lbutton][rbutton]Return to top of draw pile\n - This is the ${n}th card from the top of draw pile"
  tips.look.pile : "[lbutton]Look at top ${seen} cards of draw pile"
  tips.track.valid : "[lbutton]Move ${type} track back one space\n - ${effect}"
  tips.track.invalid : "${type} track cannot be moved back further"
  tips.track.out : "Please select a track to move back one space"
  tips.upkeep.valid : "[lbutton]Add a [cube] to this card"
  tips.upkeep.full : "This card's [cube] space is full" 
  tips.upkeep.invalid  : "Please select a card in the homeworld area"
  tips.exploration.from : "[lbutton]Move a [people] from sector ${from}"
  tips.exploration.invalid : "Please select a sector with [people]"
  tips.exploration.danger : "$(tips.exploration.from)\n - [800000]Lose all planets in sector ${from}[n]"
  tips.exploration.to : "[lbutton]Move [people] from sector ${from} to sector ${to}"
  tips.exploration.dest : "Please select an adjacent sector to sector ${from}"
  tips.exploration.cancel : "[lbutton][rbutton]Reselect departure\n - Cancel move from sector ${from}"
  tips.homeworld.set : "[lbutton]Promote this colony to homeworld"
  tips.homeworld.invalid : "Please select a colony to promote to homeworld"
  tips.plan.choose_suit : "[lbutton]Choose ${suit} type $(card.type.blank)"
  tips.plan.choose_value : "[lbutton]Add this card's value ${value} to ${suit} $(card.type.blank)"
  tips.plan.invalid : "Please pick a $(card.type.blank)"
  tips.payment.upkeep : "\n - Also produce a [cube]"
  tips.payment.skip : "[lbutton]Add a challenge card${nochoice|}[800000]${choice|}[n]"
  tips.payment.choice : "\n - Choose ${need_suits} cards to avoid challenge"
  tips.payment.nochoice : "\n - You have no cards matching ${need_suits}"
  tips.payment.use : "[lbutton]Avoid challenge from ${cardtype}\n - This ${suit} card matches ${need_suits}\n - Discard this ${cardfrom}${upkeep|}"
  tips.payment.invalid : " - Choose ${need_suits} cards to avoid adding challenge\n - Or click current ${cardtype} to accept challenge"
  tips.challenge.reveal : "[lbutton]Reveal this challenge card"
  tips.challenge.reveal.advice : "Reveal marked challenge card"
  tips.challenge.accept : "[lbutton]Accept challenge from ${challenge_suit}[800000]${choice|}[n]${nochoice|}"
  tips.challenge.choice : "\n - Choose ${challenge_suit} cards or [cube] to avoid challenge"
  tips.challenge.nochoice : "\n - No choice"
  tips.challenge.upkeep : "[lbutton]Use a [cube] to avoid challenge\n - This [cube] can avoid ${suit} challenge"
  tips.challenge.card : "[lbutton]Discard this ${challenge_suit} card to avoid challenge"
  tips.challenge.invalid : "Select challenge cards to respond to challenge${choice|}${nochoice|}"
  tips.challenge.effect : "[lbutton]${suit} ${effect}\n - ${card} from this card"
  tips.challenge.title : "${n} / ${total}"
  tips.challenge.relocate : "[blue]Relocate the homeworld[n]"
  tips.end.homeworld : "[800000]Lost all colonies[n]"
  tips.end.M : "[800000]$(hud.M.logo) Might declined[n]"
  tips.end.S : "[800000]$(hud.S.logo) Lost stability[n]"
  tips.end.X : "[800000]$(hud.X.logo) Xenological disaster[n]"
  tips.civ.victory : "[lbutton]Add this to $(card.type.civ):\n - ${adv}\n - [blue]${victory}[n]"
  tips.civ.victory.advice : "Choose the $(card.type.civ) effect depend on the victory type"
  tips.civ.advancement : "[lbutton]Add this to $(card.type.civ):\n - ${adv}\n - There are ${n} ${suit} advancements in $(desc.place.homeworld)"
  tips.civ.advancement.advice : "Choose options from at least ${n} advancements with the same suits of $(desc.place.homeworld) to enhance the $(card.type.civ)"
  tips.civ.confirm : "[lbutton]Put this $(card.type.civ) into your deck\n - You can use it in following games"
  tips.civ.confirm.advice : "Confirm your new $(card.type.civ)"
  tips.wonder.symbol : "[lbutton]Create ${symbol} wonder in [sector] ${sector}\n - $(EXPAND) to [sector] ${sector} to trigger the effects:\n - ${desc} \n - Need discard ${suit} from hand\n - # is the value of the discard card"
  tips.wonder.advice : "Choose a wonder"
  tips.wonder.suit : "[lbutton]Choose ${suit} to trigger the wonder in [sector] ${sector}"
  tips.wonder.active : "[lbutton]Discard this card to trigger the wonder in [sector] ${sector}:\n - ${extra}\n - ${n} is the value from this card"
  tips.wonder.cancel : "[lbutton]Do not trigger the wonder effect from [sector] ${sector}"
  tips.wonder.active.advice : "Discard a ${suit} card to trigger the wonder effect of [sector] ${sector}:\n - ${extra}\n - # is the value of the card\nLong press the deck to cancel the wonder effects"
  challenge.corruption.name : "Pervasive corruption"
  challenge.resource.name : "Dwindling resources"
  challenge.pirate.name : "Space pirate attacks"
  challenge.warlord.name : "Rising warlord"
  challenge.separatist.name : "Determined separatists"
  challenge.newciv.name : "New civilization emerges"
  challenge.unrest.name : "Simmering unrest"
  challenge.enervating.name : "Enervating ennui"
  challenge.decadence.name : "Utter decadence"
  challenge.rioting.name : "Rioting worlds"
  challenge.intrigue.name : "Interstellar intrigue"
  challenge.disaster.name : "Anthropogenic disaster"
  challenge.infiltration.name : "Xeno infiltration"
  challenge.xenophobia.name : "Xenophobia"
  challenge.estrangement.name : "Xeno estrangement"
  challenge.worshipping.name : "Xeno-worshipping cult"
  challenge.intervention.name : "Xeno intervention"
  challenge.pacifist.name : "Pacifist movement"
  challenge.conflict.name : "Xeno conflict"
  tips.challenge.desc : "[blue]Face Challenge[n] ${challenge_name}\n - ${challenge_desc}"
  tips.challenge.desc.track : "${track1} moves back ${dec1}, ${track2} moves back ${dec2}"
  tips.challenge.desc.trackrival : "${track} moves back ${dec}, randomly add [people]x${rival}"
  tips.challenge.desc.newciv : "Add neutral planets, add [people]x${rival}"
  tips.adv.S.choice : " - 1 $(adv.computation.name) 2 $(adv.engineering.name) 3 $(adv.communication.name)\n - 4 $(adv.weapons.name) 5 $(adv.industry.name) 6 $(adv.energy.name)"
  tips.adv.M.choice : " - 1 $(adv.art.name) 2 $(adv.leisure.name) 3 $(adv.philosophy.name)\n - 4 $(adv.literature.name) 5 $(adv.government.name) 6 $(adv.society.name)"
  tips.adv.R.choice : " - 1 $(adv.infrastructure.name) 2 $(adv.labor.name) 3 $(adv.machinery.name)\n - 4 $(adv.medicine.name) 5 $(adv.biology.name) 6 $(adv.genetics.name)"
  tips.adv.K.choice : " - 1 $(adv.history.name) 2 $(adv.education.name) 3 $(adv.ecology.name)\n - 4 $(adv.astronomy.name) 5 $(adv.chemistry.name) 6 $(adv.physics.name)"
  tips.adv.H.choice : " - 1 $(adv.economy.name) 2 $(adv.diplomacy.name) 3 $(adv.agriculture.name)\n - 4 $(adv.construction.name) 5 $(adv.military.name) 6 $(adv.defense.name)"
  tips.adv.F.choice : " - 1 $(adv.exploration.name) 2 $(adv.religion.name) 3 $(adv.empire.name)\n - 4 $(adv.devices.name) 5 $(adv.spacecraft.name) 6 $(adv.ftl.name)"
  desc.version : "game ${game_version} soluna ${engine_version}"
  desc.text : "${content|}"
  desc.text.info : "This is a [blue]${type}[n] in ${place}.\n\n${detail}"
  desc.text.hand : "[blue]$(phase.action)[n] phase: Play as action card to initiate [blue]${action}[n] action:\n - ${action_desc}[n].\n\n[blue]$(phase.payment)[n] phase: This card allows cards with ${suit} advancements in the homeworld area to avoid challenges and produce [cube].\n\n[blue]$(phase.challenge)[n] phase: This card can be used to counter negative effects from ${suit} type challenges.\n\n"
  desc.text.hand.world : "$(desc.text.hand)This card represents a colonizable [planet] planet [blue]${name}[n] in sector [blue]${sector}[n], $(plant.era). If you control sector ${sector}, this card can be used for $(action.settle).\n\nNote: Advancement effects marked on the card provide no benefits while in hand."
  desc.text.hand.blank : "$(desc.text.hand)When there are no other [blue]$(card.type.world)[n] in hand, $(card.type.blank) can be used for $(action.settle). After colonization, this card becomes a $(card.type.world)."
  desc.text.hand.tech.complete : "$(desc.tech.discard)\n\n$(desc.text.hand)"
  desc.tech.discard : "This card created in era ${era} is complete and can be used in the following phases:\n${adv1_discard}\n${adv2_discard}\n${adv3_discard}"
  desc.text.hand.tech : "This card created in era ${era} still has room for advancement. Advancement abilities of incomplete ${type} in hand cannot be used until this card is completed.\n\n$(desc.text.hand)"
  desc.text.hand.civ : "It's the winning civlization ${name} of era ${era}, The homeworld ${world} of this civlization is at the sector[sector] ${sector}.\n\nAt the phase [blue]$(phase.action)[n] : If you control the sector [sector] ${sector}, Choose [blue]$(action.evoke)[n] action:\n - ${victory}\n - ${advancement}\n\n$(desc.text.hand)"
  desc.text.homeworld.world.desc : "It represents your homeworld [blue]${name}[n], $(plant.era), located in sector [blue]${sector}[n].\n\nOnce you lose control of the sector containing your homeworld, you must promote a colony to homeworld. Having no other colonies at that time will result in game failure.\n\n$(desc.payment)\n\n${adv1}${adv2|}${adv3|}"
  desc.text.homeworld.world : "$(desc.text.homeworld.world.desc)\n\nThis world can be advanced. To win the game, you need advance 3 times.\n\n$(desc.payment)\n\n${adv1}${adv2|}${adv3|}"
  desc.text.homeworld.world.complete : "$(desc.text.homeworld.world.desc)\n\n$(desc.payment)\n\n${adv1}${adv2|}${adv3|}"
  desc.payment : "Because this card has [blue]${payment}[n] type advancement, you can avoid challenges and produce [cube] during [blue]$(phase.payment)[n] phase by discarding hand cards with ${payment} markers. [cube] can counter negative effects from ${payment} type challenges during [blue]$(phase.challenge)[n] phase."
  desc.text.homeworld.tech : "It represents an uncompleted tech of your homeworld. Advance it 3 times to complete the tech. To win the game, you should own least ${vic_tech} completed tech.\n\n$(desc.payment)\n\n${adv1}${adv2|}${adv3|}"
  desc.text.homeworld.tech.complete : "It represents a completed tech of your homeworld. To win the game, you should own least ${vic_tech} completed tech.\n\n$(desc.payment)\n\n${adv1}${adv2|}${adv3|}"
  desc.text.colony.world : "It represents a settled world in the sector [sector] [blue]${sector}[n], $(plant.era).\n\nIf there are wonders in the galaxy, you must have settled worlds for each wonder on the map (to a maximum ${vic_colony}) to win the game.\n\nThe colony is a backup for your homeworld. When your homeworld is lost, a colony can be your new homeworld.\n\nIn the phase $(phase.challenge), you can use this card to prevent a ${suit} type challenge, but you should discard it after that. Moreover, using the advancement effect is single use. If you trigger these effect , you should discard this card.\n\n${adv1}${adv2|}${adv3|}"
  desc.text.colony.world.complete : "$(desc.text.colony.world)"
  desc.text.neutral.world : "It represents a neutral [planet] planet [blue]${name}[n] currently existing in sector [blue]${sector}[n], $(plant.era).\n\nOnce you control sector ${sector}, you can $(action.settle) to it.\n\nAfter successfully colonizing a neutral [planet] planet, you immediately gain a free [blue]$(action.power)[n] action and a [blue]$(action.advance)[n] action."
  desc.adv1:"• [blue]${adv1_name}[n] (advancement gained in era ${adv1_era}) can be used in [blue]${adv1_stage}[n] phase: ${adv1_desc}\n\n"
  desc.adv2:"• [blue]${adv2_name}[n] (advancement gained in era ${adv2_era}) can be used in [blue]${adv2_stage}[n] phase: ${adv2_desc}\n\n"
  desc.adv3:"• [blue]${adv3_name}[n] (advancement gained in era ${adv3_era}) can be used in [blue]${adv3_stage}[n] phase: ${adv3_desc}\n\n"
  desc.adv1.discard:"• [blue]${adv1_stage}[n]: Can activate [blue]${adv1_name}[n] (advancement gained in era ${adv1_era}): ${adv1_desc}"
  desc.adv2.discard:"• [blue]${adv2_stage}[n]: Can activate [blue]${adv2_name}[n] (advancement gained in era ${adv2_era}): ${adv2_desc}"
  desc.adv3.discard:"• [blue]${adv3_stage}[n]: Can activate [blue]${adv3_name}[n] (advancement gained in era ${adv3_era}): ${adv3_desc}"
  desc.place.hand : "hand"
  desc.place.homeworld : "desktop homeworld area"
  desc.place.colony : "desktop colony area"
  desc.place.neutral : "desktop neutral area"
  desc.adv.multiple : "\n\nIf the card has multiple advancements that can be used in ${phase} phase, all of them can take effect. You can decide the order: use [rbutton] to switch the priority advancement effect."
  desc.adv.hand.tech : "This completed $(card.type.tech) has an advancement ${adv_name} gained in era ${adv_era}. Currently in ${phase} phase, you can discard this card to gain the advancement effect:\n\n${adv_desc}$(desc.adv.multiple)"
  desc.adv.desktop : "This card has advancement ${adv_name}. Currently in ${phase} phase, so you can trigger its corresponding effect:\n\n[blue]${adv_name}[n] ${adv_desc}$(desc.adv.multiple)"
  desc.adv.homeworld.world : "$(desc.adv.desktop)"
  desc.adv.homeworld.tech : "$(desc.adv.desktop)"
  desc.adv.colony.world : "$(desc.adv.homeworld.world)\n\nColony advancement effects are one-time use, discard this card after use."
  plant.era : "This [planet] planet was first discovered in era ${era}"
  action.evoke : "[civ]EVOKE"
  action.power : "[sun]$(POWER)"
  action.power.desc : "Draw 2 [card] cards"
  action.power.detail : "Draw 2 cards and add to hand"
  action.settle : "[moon]$(SETTLE)"
  action.settle.desc : "Colonize [planet] planet"
  action.settle.detail : "Hand contains $(card.type.world) located in a sector you control, place this card in $(desc.place.colony)\n - You control the sector containing neutral planets, move corresponding $(card.type.world) from $(desc.place.neutral) to $(desc.place.colony)\n - Convert $(card.type.blank) in hand to $(card.type.world) located in a sector you control and place in $(desc.place.colony). Hand must contain no $(card.type.world)\n - Create a new $(card.type.world) located in a sector you control and place in $(desc.place.colony). Hand must contain no $(card.type.world) or $(card.type.blank)\n - If unable to place $(card.type.world) in a sector you control, cannot initiate $(action.settle) action"
  action.settle.desc.invalid : "No control over $(card.type.world) sector in hand"
  action.advance : "[skull]$(ADVANCE)"
  action.advance.desc : "Advance [planet] planet or [tech] technology"
  action.advance.detail : "Advance your homeworld or colonies once, or add a new $(card.type.tech) to homeworld, or advance an incomplete $(card.type.tech) in homeworld"
  action.grow : "[heart]$(GROW)"
  action.grow.desc : "Add 2 [people]"
  action.grow.desc.invalid : "No sectors available to add [people]"
  action.grow.detail : "Add 2 [people] in sectors you control"
  action.battle : "[hand]$(BATTLE)"
  action.battle.desc : "Attack adjacent [sector]"
  action.battle.desc.safe : "No adjacent rivals, advance any [token]"
  action.battle.detail : "Select a sector you control and its adjacent rival sector, eliminate any number of your and rival [people] at 1:1 ratio. Number can be 0 or all. If you have no adjacent rival sectors, advance any [token] one space"
  action.expand : "[foot]$(EXPAND)"
  action.expand.desc : "Send [people] to adjacent [sector]"
  action.expand.detail : "Send at least one [people] to adjacent empty sectors\n - Destination has no enemies\n - Destination [people] not at limit\n - Cannot lose control of departure sector as a result"
  action.expand.desc.invalid : "No movable [blue][people][n] available"
  phase.setup : Setup
  phase.start : Start
  phase.discard : Discard
  phase.action : Action
  phase.payment : Payment
  phase.challenge : Challenge
  phase.end : End
  phase.victory : Victory
  phase.victory.wonder : "[blue]Create Wonder[n]"
  phase.wonder : Wonder
  victory.territory : "Territory Victory"
  victory.territory.title : "[sector]x${vic.sec}"
  victory.population : "Population Victory"
  victory.population.title : "[blue][people][n]x${vic.people}"
  victory.culture : "Culture Victory"
  victory.culture.title : "$(hud.C.logo)"
  victory.might : "Might Victory"
  victory.might.title : "$(hud.M.logo)"
  victory.stability : "Stability Victory"
  victory.stability.title : "$(hud.S.logo)"
  victory.xeno : "Xeno Victory"
  victory.xeno.title : "$(hud.X.logo)"
  wonder.choose : "In the future games:\n[blue] - $(EXPAND)[n] to [sector] ${sector}\n - Discard a ${suit} card in your hand\n - Trigger the effect\n\n  [blue]${desc}[n]\n\n  # is the value of discard card"
  wonder.choose.title : "[blue]Choose Wonder[n] ${symbol}${suit}"
  wonder.suits.title : "[blue]Choose ${suit} to trigger wonder[n]"
  wonder.suits.choose : "Wonder effect:\n\n  ${desc}\n\nTrigger condition:\n - $(EXPAND)[n] to [sector] ${sector}\n - Discard ${suit} card in your hand"
  wonder.T : "Draw ${n|#} [card]"
  wonder.P : "Add ${n|#} [blue][people][n] to [sector] ${sector} you control"
  wonder.C : "Add ${n|#} to $(hud.C.logo) $(hud.C)"
  wonder.M : "Add ${n|#} to $(hud.M.logo) $(hud.M)"
  wonder.S : "Add ${n|#} to $(hud.S.logo) $(hud.S)"
  wonder.X : "Add ${n|#} to $(hud.X.logo) $(hud.X)"
  card.type.world : "[worldcard]World Card"
  card.type.blank : "[blankcard]Blank Card"
  card.type.tech : "[techcard]Tech Card"
  card.type.civ : "[civcard]Civilization Card"
  card.logo : "DEEP\nFUTURE"
  card.copy : "[blue]Copy[n]"
  card.challenge : "[blue]Challenge Card[n]"
  card.extra : "${text}"
  card.number : "[stack]${draw} [discard]${discard}\n${eye|}"
  card.upkeep : "${_upkeep|}"
  card.seen : "[blue][eye] ${seen}[n]"
  card.civ.name : "${_name}"
  card.civ.name.final : "${sector} - ${name}"
  card.civ.title : "${era}. [civ]Civilization"
  card.civ.victory : "${_victory|}"
  card.civ.advancement : "${_advancement|}"
  card.civ.world : "${world|}"
  card.civ.tech1 : "${tech.1|}"
  card.civ.tech2 : "${tech.2|}"
  card.civ.tech3 : "${tech.3|}"
  card.civ.tech4 : "${tech.4|}"
  civ.territory.desc : "Adjacent empty [sector]+1[people]"
  civ.population.desc : "One [sector] you control +4[people]"
  civ.culture.desc : "C+3"
  civ.might.desc : "M+2"
  civ.stability.desc : "S+2"
  civ.xeno.desc : "X+2"
  civ.S.desc : "Draw 3 [card]"
  civ.M.desc : "Settle on a new world"
  civ.R.desc : "Add 3[people] across [sector] you control"
  civ.K.desc : "Advance a tech; pick either 1 suit or value"
  civ.H.desc : "Add 1 [token]; remove 1 adjacent rival [people]"
  civ.F.desc : "Expand into 2 adjacent [sector]"
  civ.choose.victory : "[blue]Victory Type[n]"
  civ.phase.create : "Create [blue]$(card.type.civ)[n]"
  civ.advancement.S : "$(suit.sun)"
  civ.advancement.M : "$(suit.moon)"
  civ.advancement.R : "$(suit.heart)"
  civ.advancement.K : "$(suit.skull)"
  civ.advancement.H : "$(suit.hand)"
  civ.advancement.F : "$(suit.foot)"
  hud.world : Homeworld
  hud.colony : Colony
  hud.phase : "${text} Phase\n${extra|}"
  hud.turn : "Galactic Year [blue]${turn}[n]"
  hud.mark : "${mark}"
  hud.C : "C"
  hud.C.logo : "[culture]"
  hud.M : "M"
  hud.M.logo : "[might]"
  hud.S : "S"
  hud.S.logo : "[stable]"
  hud.X : "X"
  hud.X.logo : "[xeno]"
  hex.id : "[gray]${id}"
  hex.people : "${people|}"
  hex.name : "${name|}"
  hex.wonder : "${wonder|}${suit|}"
  suit.sun : "[sun]"
  suit.moon : "[moon]"
  suit.heart : "[heart]"
  suit.skull : "[skull]"
  suit.hand : "[hand]"
  suit.foot : "[foot]"
  card.corner : "${_marker|}"
  card.world.name : "${sector|} ${name|}"
  card.world.title : "${era}. [planet]World"
  card.tech.name : "${name|}"
  card.tech.title : "${era}. [tech]Tech"
  card.blank.name : "[blue]${name|}[n]"
  card.blank.info : "${info|}"
  card.evoke.action : "Action card"
  card.adv : "${_suit|} ${_name|}"
  card.desc : "${_stage|} ${_desc|}"
  card.circle : "${_circle|}"
  card.pick.suit : "[blue]Pick Suit[n]"
  card.pick.suit.random : "[blue]Random Suit[n]"
  CHOOSE : "Choose Action"
  START : START
  ADVANCE : ADVANCE
  EXPAND : EXPAND
  BATTLE : BATTLE
  POWER : POWER
  SETTLE : SETTLE
  GROW : GROW
  FREEACTION : "Colonization Bonus:"
  START.card : START
  ADVANCE.card : ADV
  EXPAND.card : EXP
  BATTLE.card : BAT
  POWER.card : POW
  SETTLE.card : SET
  GROW.card : GROW
  adv.track.use : "Back [token];"
  adv.track.use.detail : "Select any [token] to move back one space (cannot move to [cross] position)"
  adv.track.C1 : "Advance [token] on C track one space, [token] reaching [star] position is a prerequisite for [culture] Culture victory"
  adv.track.C2 : "Advance [token] on C track two spaces, [token] reaching [star] position is a prerequisite for [culture] Culture victory"
  adv.track.M1 : "Advance [token] on M track one space, [token] reaching [star] position is a prerequisite for [might] Might victory"
  adv.track.X1 : "Advance [token] on X track one space, [token] reaching [star] position is a prerequisite for [xeno] Xenology victory"
  adv.track.S1 : "Advance [token] on S track one space, [token] reaching [star] position is a prerequisite for [stable] Stability victory"
  adv.computation.name : Computation
  adv.computation.desc : "Draw 1[card]; 1[discard]"
  adv.computation.detail : "Draw 1 card and add to hand, then discard 1 hand card."
  adv.engineering.name : Engineering
  adv.engineering.desc : "M+1"
  adv.engineering.detail : "$(adv.track.M1)"
  adv.communication.name : Communication
  adv.communication.desc : "M+1"
  adv.communication.detail : "$(adv.track.M1)"
  adv.weapons.name : Weapons
  adv.weapons.desc : "M+1"
  adv.weapons.detail : "$(adv.track.M1)"
  adv.industry.name : Industry
  adv.industry.desc : "1[discard];Draw 2[card]"
  adv.industry.detail : "First discard 1 hand card, then draw 2 cards and add to hand."
  adv.energy.name : Energy
  adv.energy.desc : "Draw 1[card]"
  adv.energy.detail : "Draw 1 card and add to hand."
  adv.art.name : Art
  adv.art.desc : "C+1"
  adv.art.detail : "$(adv.track.C1)"
  adv.leisure.name : Leisure
  adv.leisure.desc : "C+2"
  adv.leisure.detail : "$(adv.track.C2)"
  adv.philosophy.name : Philosophy
  adv.philosophy.desc : "X+1"
  adv.philosophy.detail : "$(adv.track.X1)"
  adv.literature.name : Literature
  adv.literature.desc : "C+2"
  adv.literature.detail : "$(adv.track.C2)"
  adv.government.name : Government
  adv.government.desc : "Add an advancement to a world when settling it"
  adv.government.detail : "Immediately advance the planet colonized this time."
  adv.society.name : Society
  adv.society.desc : "May settle on a new world"
  adv.society.detail : "Regardless of whether hand contains $(card.type.world) or $(card.type.blank), can create a new $(card.type.world) or convert a $(card.type.blank) in hand for colonization. This avoids inability to initiate [blue]$(action.settle)[n] action."
  adv.infrastructure.name : Infrastructure
  adv.infrastructure.desc : "$(adv.track.use)Place 1[cube]"
  adv.infrastructure.detail : "$(adv.track.use.detail), then add a [cube] to homeworld."
  adv.labor.name : Labor
  adv.labor.desc : "S+1"
  adv.labor.detail : "$(adv.track.S1)"
  adv.machinery.name : Machinery
  adv.machinery.desc : "S+1"
  adv.machinery.detail : "$(adv.track.S1)"
  adv.medicine.name : Medicine
  adv.medicine.desc : "S+1"
  adv.medicine.detail : "$(adv.track.S1)"
  adv.biology.name : Biology
  adv.biology.desc : "+1[people] in diff [sector]"
  adv.biology.detail : "Additionally select another sector you control and add one [people] population."
  adv.genetics.name : Genetics
  adv.genetics.desc : "+2[people]"
  adv.genetics.detail : "Select a sector that gained [people] population and add two more [people] population."
  adv.history.name : History
  adv.history.desc : "Look 1 more [card]"
  adv.history.detail : "Look at one additional card from the top of deck, can stack."
  adv.education.name : Education
  adv.education.desc : "X+1"
  adv.education.detail : "$(adv.track.X1)"
  adv.ecology.name : Ecology
  adv.ecology.desc : "X+1"
  adv.ecology.detail : "$(adv.track.X1)"
  adv.astronomy.name : Astronomy
  adv.astronomy.desc : "X+1"
  adv.astronomy.detail : "$(adv.track.X1)"
  adv.chemistry.name : Chemistry
  adv.chemistry.desc : "Redraw generating"
  adv.chemistry.detail : "If unsatisfied with the drawn advancement type or entry, redraw once. Can be used when determining advancement type during new $(card.type.tech) creation."
  adv.physics.name : Physics
  adv.physics.desc : "Choose +1 on a tech"
  adv.physics.detail : "Can additionally select advancement entries on $(card.type.tech) once more, can stack up to twice."
  adv.economy.name : Economy
  adv.economy.desc : "$(adv.track.use)Draw 2[card]"
  adv.economy.detail : "$(adv.track.use.detail), then draw two cards and add to hand."
  adv.diplomacy.name : Diplomacy
  adv.diplomacy.desc : "C+2"
  adv.diplomacy.detail : "$(adv.track.C2)"
  adv.agriculture.name : Agriculture
  adv.agriculture.desc : "S+1"
  adv.agriculture.detail : "$(adv.track.S1)"
  adv.construction.name : Construction
  adv.construction.desc : "C+2"
  adv.construction.detail : "$(adv.track.C2)"
  adv.military.name : Military
  adv.military.desc : "Battle another 2[sector]"
  adv.military.detail : "Additionally designate one friendly sector and one rival sector to join the war, can designate previously selected sectors."
  adv.defense.name : Defense
  adv.defense.desc : "[people]-1 from battle"
  adv.defense.detail : "Remove 1 rival [people] from participating rival sectors."
  adv.exploration.name : Exploration
  adv.exploration.desc : "$(adv.track.use)Move 1[people]"
  adv.exploration.detail : "$(adv.track.use.detail), then move one friendly [people] population one space. Losing control of departure sector after movement is allowed."
  adv.religion.name : Religion
  adv.religion.desc : "C+2"
  adv.religion.detail : "$(adv.track.C2)"
  adv.empire.name : Empire
  adv.empire.desc : "M+1"
  adv.empire.detail : "$(adv.track.M1)"
  adv.devices.name : Devices
  adv.devices.desc : "C+2"
  adv.devices.detail : "$(adv.track.C2)"
  adv.spacecraft.name : Spacecraft
  adv.spacecraft.desc : "1[people] to another [sector]"
  adv.spacecraft.detail : "From departure point, move 1[people] to another different sector."
  adv.ftl.name : FTL
  adv.ftl.desc : "Move on extra [sector]"
  adv.ftl.detail : "When moving, add one space to range, can pass through galactic center or rival [sector] (but cannot stop)."
  adv.random.confirm : "[blue]Please confirm[n]"
  adv.random.value : "[blue]Random draw[n]"
  adv.choose.value : "[blue]Free choice[n]"
  credits.programmer : "Programmer"
  credits.artist : "Artist"
  credits.designer : "Designer"
  credits.boardgame : "Boardgame Designer"
  credits.engine : "Game Engine (Windows)"
  credits.macos : "MacOS Version"
  credits.linux : "Linux Vesion"
  credits.localization : "Localization"
